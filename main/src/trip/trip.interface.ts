/**
 * This file is auto-generated by nestjs-proto-gen-ts
 */

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';
import { Participates, Trip } from 'src/common/types/trip';

export default interface TripInterface {
  getAllTripByUserId(
    data: GetAllTripByUserIdRequest,
    metadata?: Metadata,
    ...rest: any[]
  ): Observable<GetAllTripByUserIdResponse>;
  createTripPlan(
    data: CreateTripPlanRequest,
    metadata?: Metadata,
    ...rest: any[]
  ): Observable<CreateTripPlanResponse>;
  createTripPlanByArchiveId(
    data: CreateTripPlanByArchiveIdRequest,
    metadata?: Metadata,
    ...rest: any[]
  ): Promise<CreateTripPlanResponse>;
  getAllTripByParticipateId(
    data: GetAllTripByUserIdRequest,
    metadata?: Metadata,
    ...rest: any[]
  ): Promise<GetAllTripByUserIdResponse>;
  getTripDetailById(
    data: GetTripDetailByIdRequest,
    metadata?: Metadata,
    ...rest: any[]
  ): Promise<GetTripDetailByIdResponse>;
}

export interface Coordinate {
  latitude: string;
  longtitude: string;
  latitudeDelta?: string | undefined;
  longtitudeDelta?: string | undefined;
}

export interface Places {
  name: string;
  province: string;
  coodinate?: Coordinate | undefined;
}

export interface TripPlan {
  authorId: string;
  title: string;
  startDate: string;
  endDate: string;
  vehicle: string;
  provinces: string[];
}

// tslint:disable-next-line:no-empty-interface
// eslint-disable-next-line @typescript-eslint/no-empty-interface
export interface GetAllTripByUserIdRequest {
  userId: string;
}
export interface GetAllTripByUserIdResponse {
  data: Trip[];
}

export interface CreateTripPlanRequest {
  authorId: string;
  title: string;
}

export interface CreateTripPlanResponse {
  data: Trip;
}

export interface CreateTripPlanByArchiveIdRequest {
  author: Participates;
  title: string;
  archiveId: string;
  participates: Participates[];
}

export interface GetTripDetailByIdRequest {
  tripId: string;
}
export interface GetTripDetailByIdResponse {
  data: Trip;
}
